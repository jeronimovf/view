javax.faces.validator.BeanValidator.MESSAGE={1}: {0}

javax.validation.constraints.AssertFalse.message=must be false
javax.validation.constraints.AssertTrue.message=must be true
javax.validation.constraints.DecimalMax.message=\
    must be less than ${inclusive == true ? 'or equal to ' : ''}{value}
javax.validation.constraints.DecimalMin.message=\
    must be greater than ${inclusive == true ? 'or equal to ' : ''}{value}
javax.validation.constraints.Digits.message=\
    numeric value out of bounds (<{integer} digits>.<{fraction} digits> expected)
javax.validation.constraints.Future.message=must be a future date
javax.validation.constraints.Max.message=must be less than or equal to {value}
javax.validation.constraints.Min.message=must be greater than or equal to {value}
javax.validation.constraints.NotNull.message=must not be null
javax.validation.constraints.Null.message=must be null
javax.validation.constraints.Past.message=must be a past date
javax.validation.constraints.Pattern.message=\
    must match the following regular expression: {regexp}
javax.validation.constraints.Size.message=size must be between {min} and {max}



vigencia.estritaaocontrato=O per\u00edodo de vig\u00eancia de %s deve estar contido no per\u00edodo de vig\u00eancia do contrato.
vigencia.valida=Uma vig\u00eancia v\u00e1lida deve ter data de in\u00edcio preenchida e uma data final nula ou superior \u00e0 data de in\u00edcio.
vigencia.unicanocontexto=As vig\u00eancias neste contexto s\u00e3o exclusivas.  N\u00e3o podem existir duas ocorr\u00eancias com data de vig\u00eancia em aberto (termino da validade em branco) ou coincid\u00eancia de per\u00edodos, ainda que parcial.
